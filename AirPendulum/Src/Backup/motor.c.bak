#include "motor.h"
#include "stm32f4xx_hal_tim.h"
#include <math.h>


const uint16_t motor1[62]={1034, 1050, 1054, 1074, 1095, 1114, 1134, 1154, 1173, 1192,       //  0 --> 9;    
										 1211, 1230, 1248, 1266, 1284, 1302, 1320, 1338, 1355, 1373,       //10 --> 19;
										 1390, 1407, 1424, 1440, 1457, 1474, 1490, 1506, 1522, 1538,       //20 --> 29;
										 1554, 1570, 1585, 1601, 1616, 1632, 1647, 1662, 1667, 1692,       //30 --> 39;
                     1707, 1722, 1736, 1751, 1765, 1780, 1794, 1808, 1822, 1836,       //40 --> 49;
										 1850, 1864, 1878, 1892, 1905, 1919, 1932, 1946, 1959, 1972,       //50 --> 59;
										 1986, 1999};      //60 --> 61;

const uint16_t motor2[70]={1034, 1049, 1050, 1054, 1073, 1111, 1146, 1177, 1207, 1234,       //  0 --> -9;    
										 1260, 1285, 1309, 1332, 1354, 1375, 1395, 1415, 1434, 1453,       //-10 --> -19;
										 1471, 1489, 1506, 1523, 1540, 1556, 1572, 1588, 1603, 1618,       //-20 --> -29;
										 1633, 1647, 1662, 1676, 1690, 1703, 1717, 1730, 1743, 1756,       //-30 --> -39;
                     1769, 1782, 1794, 1807, 1819, 1831, 1843, 1855, 1866, 1878,       //-40 --> -49;
										 1889, 1900, 1912, 1923, 1934, 1945, 1955, 1966, 1977, 1987};      //-50 --> -59;
									


const uint16_t motor3[50]={1034, 1043, 1050, 1064, 1084, 1103, 1123, 1142, 1162, 1181,       //0-->9;    
										 1200, 1220, 1239, 1258, 1277, 1295, 1314, 1333, 1351, 1370,       //10-->19;
										 1388, 1407, 1425, 1443, 1461, 1479, 1497, 1515, 1533, 1551,       //20-->29;
										 1568, 1586, 1604, 1621, 1638, 1656, 1673, 1690, 1707, 1724,       //30-->39;
                     1741, 1758, 1775, 1792, 1809, 1826, 1842, 1858, 1876, 1892};      //40--49;

const uint16_t motor4[70]={1034, 1043, 1050, 1052, 1054, 1056, 1084, 1110, 1135, 1159,       //  0 --> -9;    
										 1182, 1205, 1226, 1247, 1267, 1287, 1305, 1324, 1342, 1360,       //-10 --> -19;
										 1377, 1394, 1410, 1426, 1442, 1458, 1473, 1488, 1503, 1518,       //-20 --> -29;
										 1532, 1546, 1560, 1574, 1587, 1600, 1614, 1627, 1639, 1652,       //-30 --> -39;
                     1665, 1677, 1689, 1701, 1713, 1725, 1737, 1749, 1760, 1771,       //-40 --> -49;
										 1783, 1794, 1805, 1816, 1827, 1838, 1848, 1859, 1869, 1880,       //-50 --> -59;
										 1890, 1900, 1910, 1921, 1931, 1941, 1950, 1960, 1970, 1980};      //-60 --> -69;


//PWMInCh1:副翼  PWMInCh2:升降舵  PWMInCh3:油门  PWMInCh4:方向舵
uint16_t PWMInCh1=1501, PWMInCh2=1501, PWMInCh3=2000, PWMInCh4=1501;
extern TIM_HandleTypeDef htim1;

/**************************实现函数************************************
*函数原型: TIM1_Motor_PWMOutput
		
*功　　能: Tim1输出PWM给电调，DR1、DR2、DR3、DR4为经过PID的MOTOR1 MOTOR2
           MOTOR3 MOTOR4		
***********************************************************************/
void TIM1_Motor_PWMOutput(uint16_t DR1,uint16_t DR2,uint16_t DR3,uint16_t DR4)
{
	TIM_HandleTypeDef *htim_motor=&htim1;
  /* Set the Capture Compare4 Register value */
  htim_motor->Instance->CCR1=DR1;
	htim_motor->Instance->CCR2=DR2;
	htim_motor->Instance->CCR3=DR3;
	htim_motor->Instance->CCR4=DR4;
}

/*=========================================================================================*/
/*Time6 is used for recording sampling time*/
float Get_Nowtime(void)//返回当前tim6计数器值,16位
{
	float temp=0 ;
	static uint16_t now=0; // 采样周期计数 单位 us

 	now = TIM6->CNT;//读高16位时间
   	TIM6->CNT=0;
	temp = (float)now / 2000.0f;          //换算成秒，再除以2得出采样周期的一半

	return temp;
}

/*=========================================================================================*/
/*Timer10 is used for recording the Angle PID time*/
float Get_Angle_PIDtime(void)//返回当前tim10计数器值,32位
{
	float temp_PID=0 ;
	static uint32_t now_PID=0; // 采样周期计数 单位 us

 	now_PID = TIM10->CNT;//读高16位时间
   	TIM10->CNT=0;
	temp_PID = (float)now_PID / 2000.0f;          //换算成秒

	return temp_PID;
}

/* Timer14 is used for recording the Rate PID time */
float Get_Rate_PIDtime(void)//返回当前tim14计数器值,16位
{
	float temp_PID=0 ;
	static uint16_t now_PID=0; // 采样周期计数 单位 us

 	now_PID = TIM14->CNT;//读高16位时间
   	TIM14->CNT=0;
	temp_PID = (float)now_PID / 2000.0f;          //换算成秒

	return temp_PID;
}


float Get_Sampletime(void)
{
	float temp=0 ;
	static uint16_t now=0; // 采样周期计数 单位 us

 	now = TIM13->CNT;//读高16位时间
   	TIM13->CNT=0;
	temp = (float)now / 1000.0f;          //换算成毫秒，再除以2得出采样周期的一半

	return temp;
}

